[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Latest Posts",
    "section": "",
    "text": "Using linear regression to predict fantasy rookie receiver rankings\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nMay 7, 2024\n\n\nGunnar Lombard\n\n\n\n\n\n\n\n\n\n\n\n\nHow good is code at predicting the 2024 NCAA Bracket\n\n\n\n\n\n\nncaa\n\n\nmachinelearning\n\n\nbasketball\n\n\n\n\n\n\n\n\n\nApr 4, 2024\n\n\nGunnar Lombard\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nApr 4, 2024\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nApr 1, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/how-good-is-code-at-predicting-the-2024-ncaa-bracket/index.html",
    "href": "posts/how-good-is-code-at-predicting-the-2024-ncaa-bracket/index.html",
    "title": "How good is code at predicting the 2024 NCAA Bracket",
    "section": "",
    "text": "How Good Is Code At Predicting The 2024 March Madness Bracket? It was far better than trying to pick the games myself. Using code, my bracket correctly predicted the eventual National Champion UConn Huskies which boosted the percentage to 76.7%. My best region was the East Region as that was the only correct final four prediction for my model.\n\nUpon research, there are a few factors that were important for determining a good basketball team. One of the most direct ones is offensive and defensive efficiency. A few that particularly predict a good March Madness run is a strong group of upperclassmen and a seasoned coach. I also believe that teams can go on hot streaks, particularly from the offensive side of the ball. With these being stated, my model considered offensive and defensive efficiency, a rolling offensive efficiency of 5 games, and a season long three-point shooting percentage.\nIn the Midwest, my model went 4/4 on Sweet Sixteen teams. However, much like my personal bracket, my model expected Purdue to choke early in the tournament as they usually do.\nThe pick that had the biggest negative impact on my bracket was Saint Mary’s going to the final four, but they instead lost to twelve seed Grand Canyon in round one. There was also a significant missed opportunity as my model did not pick the eventual South Region champions NC State Wolfpack to make it out of the first round.\nMore often than not, when my model missed it was because it was too conservative, picking the better seed to advance when an upset happened. In the first round, of the 14 games my model missed, 9 of the picks were the better seed that got upset. However, my model did predict two double digit seeds to make it to the Sweet Sixteen, JMU and New Mexico State, but only 11 seed NC State did make it. My model took a couple “swings,” but missed both times. Neither of the two teams that my model picked were particularly strong three-point shooting teams, but one thing to note is they both won their conference tournaments and were thus coming off some strong performances recently, boosting their 5 game rolling average offensive efficiency. Therefore, I believe that is why my model was high on those teams going into the tournament.\nOverall, my code did decently well in the first and second round of the bracket but fell off steeply for the sweet sixteen and elite eight. Having the correct champion is what salvaged my bracket over the final two rounds of the tournament.\n\nIf I were to go through this process again, I would try to implement a factor for how old the starting lineups are for the tournament teams. In the championship game we had 4 seniors, 5 sophomores, and only 1 freshman starting between the two teams. Both team’s sixth men were also seniors, further showing the importance of a strong group of upperclassmen. The coaches were also both experienced having been coaching since 2018 and 2005 for Dan Hurley of UConn and Matt Painter of Purdue, respectively.\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(hoopR)\nlibrary(zoo)\nlibrary(gt)\nlibrary(bonsai)\nset.seed(1234)\n\ngames &lt;- load_mbb_team_box(seasons = 2015:2024) |&gt; filter(game_date &lt; as.Date(\"2024-03-18\"))\n\nnond1 &lt;- games |&gt; \n  group_by(team_id, season) |&gt; \n  tally() |&gt; \n  filter(n &lt; 10 & season!= 2021) |&gt; \n  select(team_id)\nnond1 &lt;- pull(nond1)\n\ndf &lt;- games |&gt; filter(!team_id %in% nond1 & !opponent_team_id %in% nond1)\n\n\n#Creating fit model\nteamside &lt;- df |&gt; \n  group_by(team_id, season) |&gt; \n  arrange(game_date) |&gt; \n  mutate(\n    team_possessions = field_goals_attempted - offensive_rebounds + turnovers + (.475 * free_throws_attempted),\n    team_points_per_possession = team_score/team_possessions,\n    team_defensive_points_per_possession = opponent_team_score/team_possessions,\n    team_offensive_efficiency = team_points_per_possession * 100,\n    team_defensive_efficiency = team_defensive_points_per_possession * 100,\n    team_season_offensive_efficiency = lag(cummean(team_offensive_efficiency), n=1),\n    team_season_defensive_efficiency = lag(cummean(team_defensive_efficiency), n=1),  \n    score_margin = team_score - opponent_team_score,\n    absolute_score_margin = abs(score_margin),\n    team_rolling_mean_2_offensive_efficiency = rollmean(lag(team_offensive_efficiency, n=1), k=2, align=\"right\", fill=NA),\n    team_mean_season_three_point_field_goal_pct = lag(cummean(three_point_field_goal_pct), n=1)\n  ) |&gt; \n  filter(absolute_score_margin &lt;= 40) |&gt; \n  ungroup()\n\nopponentside &lt;- teamside |&gt; \n  select(-opponent_team_id) |&gt; \n  rename(\n    opponent_team_id = team_id,\n    opponent_season_offensive_efficiency = team_season_offensive_efficiency,\n    opponent_season_defensive_efficiency = team_season_defensive_efficiency,\n    opponent_rolling_mean_2_offensive_efficiency = team_rolling_mean_2_offensive_efficiency,\n    opponent_mean_season_three_point_field_goal_pct = team_mean_season_three_point_field_goal_pct\n  ) |&gt; \n  select(\n    game_id,\n    opponent_team_id,\n    opponent_season_offensive_efficiency,\n    opponent_season_defensive_efficiency,\n    opponent_rolling_mean_2_offensive_efficiency,\n    opponent_mean_season_three_point_field_goal_pct\n  )\n\nbothsides &lt;- teamside |&gt; inner_join(opponentside)\n\nbothsides &lt;- bothsides |&gt; mutate(\n  team_result = as.factor(case_when(\n    team_score &gt; opponent_team_score ~ \"W\",\n    opponent_team_score &gt; team_score ~ \"L\"\n)))\n\nbothsides$team_result &lt;- relevel(bothsides$team_result, ref=\"W\")\n\n#levels(bothsides$team_result)\n\nmodelgames &lt;- bothsides |&gt; \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_team_short_display_name, \n    season, \n    team_season_offensive_efficiency,\n    team_season_defensive_efficiency,\n    opponent_season_offensive_efficiency,\n    opponent_season_defensive_efficiency,\n    team_rolling_mean_2_offensive_efficiency,\n    opponent_rolling_mean_2_offensive_efficiency,\n    team_mean_season_three_point_field_goal_pct,\n    opponent_mean_season_three_point_field_goal_pct,\n    team_result\n    ) |&gt; na.omit()\n\ngame_split &lt;- initial_split(modelgames, prop = .8)\ngame_train &lt;- training(game_split)\ngame_test &lt;- testing(game_split)\n\nlog_mod &lt;- \n  logistic_reg() |&gt; \n  set_engine(\"glm\") |&gt;\n  set_mode(\"classification\")\n\ngame_recipe &lt;- \n  recipe(team_result ~ ., data = game_train) |&gt; \n  update_role(game_id, game_date, team_short_display_name, opponent_team_short_display_name, season, new_role = \"ID\") |&gt;\n  step_normalize(all_predictors())\n\n#summary(game_recipe)\n\nlog_workflow &lt;- \n  workflow() |&gt; \n  add_model(log_mod) |&gt; \n  add_recipe(game_recipe)\n\nlog_fit &lt;- \n  log_workflow |&gt; \n  fit(data = game_train)\n\ntrainpredict &lt;- log_fit |&gt; predict(new_data = game_train) |&gt;\n  bind_cols(game_train)\n\n#head(trainpredict)\n\n#Reseting for no lag\n\nteamside &lt;- df |&gt; \n  group_by(team_id, season) |&gt; \n  arrange(game_date) |&gt; \n  mutate(\n    team_possessions = field_goals_attempted - offensive_rebounds + turnovers + (.475 * free_throws_attempted),\n    team_points_per_possession = team_score/team_possessions,\n    team_defensive_points_per_possession = opponent_team_score/team_possessions,\n    team_offensive_efficiency = team_points_per_possession * 100,\n    team_defensive_efficiency = team_defensive_points_per_possession * 100,\n    team_season_offensive_efficiency = cummean(team_offensive_efficiency),\n    team_season_defensive_efficiency = cummean(team_defensive_efficiency),  \n    score_margin = team_score - opponent_team_score,\n    absolute_score_margin = abs(score_margin),\n    team_rolling_mean_2_offensive_efficiency = rollmean(team_offensive_efficiency, k=2, align=\"right\", fill=NA),\n    team_mean_season_three_point_field_goal_pct = cummean(three_point_field_goal_pct)\n  ) |&gt; \n  filter(absolute_score_margin &lt;= 40) |&gt; \n  ungroup()\n\nopponentside &lt;- teamside |&gt; \n  select(-opponent_team_id) |&gt; \n  rename(\n    opponent_team_id = team_id,\n    opponent_season_offensive_efficiency = team_season_offensive_efficiency,\n    opponent_season_defensive_efficiency = team_season_defensive_efficiency,\n    opponent_rolling_mean_2_offensive_efficiency = team_rolling_mean_2_offensive_efficiency,\n    opponent_mean_season_three_point_field_goal_pct = team_mean_season_three_point_field_goal_pct\n  ) |&gt; \n  select(\n    game_id,\n    opponent_team_id,\n    opponent_season_offensive_efficiency,\n    opponent_season_defensive_efficiency,\n    opponent_rolling_mean_2_offensive_efficiency,\n    opponent_mean_season_three_point_field_goal_pct\n  )\n\nbothsides &lt;- teamside |&gt; inner_join(opponentside)\n\nbothsides &lt;- bothsides |&gt; mutate(\n  team_result = as.factor(case_when(\n    team_score &gt; opponent_team_score ~ \"W\",\n    opponent_team_score &gt; team_score ~ \"L\"\n)))\n\nbothsides$team_result &lt;- relevel(bothsides$team_result, ref=\"W\")\n\n#levels(bothsides$team_result)\n\nmodelgames &lt;- bothsides |&gt; \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_team_short_display_name, \n    season, \n    team_season_offensive_efficiency,\n    team_season_defensive_efficiency,\n    opponent_season_offensive_efficiency,\n    opponent_season_defensive_efficiency,\n    team_rolling_mean_2_offensive_efficiency,\n    opponent_rolling_mean_2_offensive_efficiency,\n    team_mean_season_three_point_field_goal_pct,\n    opponent_mean_season_three_point_field_goal_pct,\n    team_result\n    ) |&gt; na.omit()\n\nplayingames &lt;- tibble(\n  team_short_display_name =\"Howard\",\n  opponent_team_short_display_name = \"Wagner\"\n) |&gt; add_row(\n  team_short_display_name = \"Boise St\",\n  opponent_team_short_display_name = \"Colorado\"\n) |&gt; add_row(\n  team_short_display_name = \"Montana St\",\n  opponent_team_short_display_name = \"Grambling\"\n) |&gt; add_row(\n  team_short_display_name = \"Colorado St\",\n  opponent_team_short_display_name = \"Virginia\"\n)\n\nplayingames &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(playingames)\n\nplayingames &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(playingames) \n\nplayin &lt;- log_fit |&gt; predict(new_data = playingames) |&gt;\n  bind_cols(playingames) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nplayin &lt;- log_fit |&gt; predict(new_data = playingames, type=\"prob\") |&gt;\n  bind_cols(playin) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#playin\n\n#East Region\n\neastround1games &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Stetson\"\n) |&gt; add_row(\n  team_short_display_name=\"FAU\",\n  opponent_team_short_display_name=\"Northwestern\"\n) |&gt; add_row(\n  team_short_display_name=\"San Diego St\",\n  opponent_team_short_display_name=\"UAB\"\n) |&gt; add_row(\n  team_short_display_name=\"Auburn\",\n  opponent_team_short_display_name=\"Yale\"\n) |&gt; add_row(\n  team_short_display_name=\"BYU\",\n  opponent_team_short_display_name=\"Duquesne\"\n) |&gt; add_row(\n  team_short_display_name=\"Illinois\",\n  opponent_team_short_display_name=\"Morehead St\"\n) |&gt; add_row(\n  team_short_display_name=\"Washington St\",\n  opponent_team_short_display_name=\"Drake\"\n) |&gt; add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_team_short_display_name=\"S Dakota St\"\n)\n\neastround1games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(eastround1games)\n\neastround1games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(eastround1games) \n\neastround1 &lt;- log_fit |&gt; predict(new_data = eastround1games) |&gt;\n  bind_cols(eastround1games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\neastround1 &lt;- log_fit |&gt; predict(new_data = eastround1games, type=\"prob\") |&gt;\n  bind_cols(eastround1) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#eastround1\n\neastround2games &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"FAU\"\n) |&gt; add_row(\n  team_short_display_name=\"Auburn\",\n  opponent_team_short_display_name=\"San Diego St\"\n) |&gt; add_row(\n  team_short_display_name=\"Illinois\",\n  opponent_team_short_display_name=\"BYU\"\n) |&gt; add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_team_short_display_name=\"Drake\"\n)\n\neastround2games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(eastround2games)\n\neastround2games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(eastround2games) \n\neastround2 &lt;- log_fit |&gt; predict(new_data = eastround2games) |&gt;\n  bind_cols(eastround2games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\neastround2 &lt;- log_fit |&gt; predict(new_data = eastround2games, type=\"prob\") |&gt;\n  bind_cols(eastround2) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#eastround2\n\neastround3games &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Auburn\"\n) |&gt; add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_team_short_display_name=\"BYU\"\n)\n\neastround3games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(eastround3games)\n\neastround3games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(eastround3games) \n\neastround3 &lt;- log_fit |&gt; predict(new_data = eastround3games) |&gt;\n  bind_cols(eastround3games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\neastround3 &lt;- log_fit |&gt; predict(new_data = eastround3games, type=\"prob\") |&gt;\n  bind_cols(eastround3) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#eastround3\n\neastround4games &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"BYU\"\n)\n\neastround4games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(eastround4games)\n\neastround4games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(eastround4games) \n\neastround4 &lt;- log_fit |&gt; predict(new_data = eastround4games) |&gt;\n  bind_cols(eastround4games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\neastround4 &lt;- log_fit |&gt; predict(new_data = eastround4games, type=\"prob\") |&gt;\n  bind_cols(eastround4) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#eastround4\n\n#West Region\n\nwestround1games &lt;- tibble(\n  team_short_display_name=\"North Carolina\",\n  opponent_team_short_display_name=\"Wagner\"\n) |&gt; add_row(\n  team_short_display_name=\"Mississippi St\",\n  opponent_team_short_display_name=\"Michigan St\"\n) |&gt; add_row(\n  team_short_display_name=\"Saint Mary's\",\n  opponent_team_short_display_name=\"Grand Canyon\"\n) |&gt; add_row(\n  team_short_display_name=\"Alabama\",\n  opponent_team_short_display_name=\"Charleston\"\n) |&gt; add_row(\n  team_short_display_name=\"Clemson\",\n  opponent_team_short_display_name=\"New Mexico\"\n) |&gt; add_row(\n  team_short_display_name=\"Baylor\",\n  opponent_team_short_display_name=\"Colgate\"\n) |&gt; add_row(\n  team_short_display_name=\"Dayton\",\n  opponent_team_short_display_name=\"Nevada\"\n) |&gt; add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_team_short_display_name=\"Long Beach St\"\n)\n\nwestround1games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(westround1games)\n\nwestround1games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(westround1games) \n\nwestround1 &lt;- log_fit |&gt; predict(new_data = westround1games) |&gt;\n  bind_cols(westround1games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nwestround1 &lt;- log_fit |&gt; predict(new_data = westround1games, type=\"prob\") |&gt;\n  bind_cols(westround1) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#westround1\n\nwestround2games &lt;- tibble(\n  team_short_display_name=\"North Carolina\",\n  opponent_team_short_display_name=\"Michigan St\"\n) |&gt; add_row(\n  team_short_display_name=\"Alabama\",\n  opponent_team_short_display_name=\"Saint Mary's\"\n) |&gt; add_row(\n  team_short_display_name=\"Baylor\",\n  opponent_team_short_display_name=\"New Mexico\"\n) |&gt; add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_team_short_display_name=\"Nevada\"\n)\n\nwestround2games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(westround2games)\n\nwestround2games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(westround2games) \n\nwestround2 &lt;- log_fit |&gt; predict(new_data = westround2games) |&gt;\n  bind_cols(westround2games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nwestround2 &lt;- log_fit |&gt; predict(new_data = westround2games, type=\"prob\") |&gt;\n  bind_cols(westround2) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#westround2\n\nwestround3games &lt;- tibble(\n  team_short_display_name=\"North Carolina\",\n  opponent_team_short_display_name=\"Saint Mary's\"\n) |&gt; add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_team_short_display_name=\"New Mexico\"\n)\n\nwestround3games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(westround3games)\n\nwestround3games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(westround3games) \n\nwestround3 &lt;- log_fit |&gt; predict(new_data = westround3games) |&gt;\n  bind_cols(westround3games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nwestround3 &lt;- log_fit |&gt; predict(new_data = westround3games, type=\"prob\") |&gt;\n  bind_cols(westround3) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#westround3\n\nwestround4games &lt;- tibble(\n  team_short_display_name=\"Arizona\",\n  opponent_team_short_display_name=\"Saint Mary's\"\n)\n\nwestround4games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(westround4games)\n\nwestround4games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(westround4games) \n\nwestround4 &lt;- log_fit |&gt; predict(new_data = westround4games) |&gt;\n  bind_cols(westround4games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nwestround4 &lt;- log_fit |&gt; predict(new_data = westround4games, type=\"prob\") |&gt;\n  bind_cols(westround4) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#westround4\n\n#South Region\n\nsouthround1games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Longwood\"\n) |&gt; add_row(\n  team_short_display_name=\"Nebraska\",\n  opponent_team_short_display_name=\"Texas A&M\"\n) |&gt; add_row(\n  team_short_display_name=\"Wisconsin\",\n  opponent_team_short_display_name=\"James Madison\"\n) |&gt; add_row(\n  team_short_display_name=\"Duke\",\n  opponent_team_short_display_name=\"Vermont\"\n) |&gt; add_row(\n  team_short_display_name=\"Texas Tech\",\n  opponent_team_short_display_name=\"NC State\"\n) |&gt; add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_team_short_display_name=\"Oakland\"\n) |&gt; add_row(\n  team_short_display_name=\"Florida\",\n  opponent_team_short_display_name=\"Colorado\"\n) |&gt; add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_team_short_display_name=\"Western KY\"\n)\n\nsouthround1games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(southround1games)\n\nsouthround1games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(southround1games) \n\nsouthround1 &lt;- log_fit |&gt; predict(new_data = southround1games) |&gt;\n  bind_cols(southround1games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nsouthround1 &lt;- log_fit |&gt; predict(new_data = southround1games, type=\"prob\") |&gt;\n  bind_cols(southround1) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#southround1\n\nsouthround2games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Nebraska\"\n) |&gt; add_row(\n  team_short_display_name=\"Duke\",\n  opponent_team_short_display_name=\"James Madison\"\n) |&gt; add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_team_short_display_name=\"Texas Tech\"\n) |&gt; add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_team_short_display_name=\"Florida\"\n)\n\nsouthround2games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(southround2games)\n\nsouthround2games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(southround2games) \n\nsouthround2 &lt;- log_fit |&gt; predict(new_data = southround2games) |&gt;\n  bind_cols(southround2games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nsouthround2 &lt;- log_fit |&gt; predict(new_data = southround2games, type=\"prob\") |&gt;\n  bind_cols(southround2) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#southround2\n\nsouthround3games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"James Madison\"\n) |&gt; add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_team_short_display_name=\"Kentucky\"\n)\n\nsouthround3games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(southround3games)\n\nsouthround3games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(southround3games) \n\nsouthround3 &lt;- log_fit |&gt; predict(new_data = southround3games) |&gt;\n  bind_cols(southround3games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nsouthround3 &lt;- log_fit |&gt; predict(new_data = southround3games, type=\"prob\") |&gt;\n  bind_cols(southround3) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#southround3\n\nsouthround4games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Kentucky\"\n)\n\nsouthround4games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(southround4games)\n\nsouthround4games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(southround4games) \n\nsouthround4 &lt;- log_fit |&gt; predict(new_data = southround4games) |&gt;\n  bind_cols(southround4games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nsouthround4 &lt;- log_fit |&gt; predict(new_data = southround4games, type=\"prob\") |&gt;\n  bind_cols(southround4) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#southround4\n\n#Midwest Region\n\nmidwestround1games &lt;- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_team_short_display_name=\"Grambling\"\n) |&gt; add_row(\n  team_short_display_name=\"Utah State\",\n  opponent_team_short_display_name=\"TCU\"\n) |&gt; add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_team_short_display_name=\"McNeese\"\n) |&gt; add_row(\n  team_short_display_name=\"Kansas\",\n  opponent_team_short_display_name=\"Samford\"\n) |&gt; add_row(\n  team_short_display_name=\"South Carolina\",\n  opponent_team_short_display_name=\"Oregon\"\n) |&gt; add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_team_short_display_name=\"Akron\"\n) |&gt; add_row(\n  team_short_display_name=\"Texas\",\n  opponent_team_short_display_name=\"Colorado St\"\n) |&gt; add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_team_short_display_name=\"Saint Peter's\"\n)\n\nmidwestround1games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(midwestround1games)\n\nmidwestround1games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(midwestround1games) \n\nmidwestround1 &lt;- log_fit |&gt; predict(new_data = midwestround1games) |&gt;\n  bind_cols(midwestround1games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nmidwestround1 &lt;- log_fit |&gt; predict(new_data = midwestround1games, type=\"prob\") |&gt;\n  bind_cols(midwestround1) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#midwestround1\n\nmidwestround2games &lt;- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_team_short_display_name=\"Utah State\"\n) |&gt; add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_team_short_display_name=\"Samford\"\n) |&gt; add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_team_short_display_name=\"South Carolina\"\n) |&gt; add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_team_short_display_name=\"Colorado St\"\n)\n\nmidwestround2games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(midwestround2games)\n\nmidwestround2games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(midwestround2games) \n\nmidwestround2 &lt;- log_fit |&gt; predict(new_data = midwestround2games) |&gt;\n  bind_cols(midwestround2games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nmidwestround2 &lt;- log_fit |&gt; predict(new_data = midwestround2games, type=\"prob\") |&gt;\n  bind_cols(midwestround2) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#midwestround2\n\nmidwestround3games &lt;- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_team_short_display_name=\"Gonzaga\"\n) |&gt; add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_team_short_display_name=\"Creighton\"\n)\n\nmidwestround3games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(midwestround3games)\n\nmidwestround3games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(midwestround3games) \n\nmidwestround3 &lt;- log_fit |&gt; predict(new_data = midwestround3games) |&gt;\n  bind_cols(midwestround3games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nmidwestround3 &lt;- log_fit |&gt; predict(new_data = midwestround3games, type=\"prob\") |&gt;\n  bind_cols(midwestround3) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#midwestround3\n\nmidwestround4games &lt;- tibble(\n  team_short_display_name=\"Tennessee\",\n  opponent_team_short_display_name=\"Gonzaga\"\n)\n\nmidwestround4games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(midwestround4games)\n\nmidwestround4games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(midwestround4games) \n\nmidwestround4 &lt;- log_fit |&gt; predict(new_data = midwestround4games) |&gt;\n  bind_cols(midwestround4games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nmidwestround4 &lt;- log_fit |&gt; predict(new_data = midwestround4games, type=\"prob\") |&gt;\n  bind_cols(midwestround4) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#midwestround4\n\n#Final Four and Beyond\n\nfinalfourgames &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Saint Mary's\"\n) |&gt; add_row(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Gonzaga\"\n)\n\nfinalfourgames &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(finalfourgames)\n\nfinalfourgames &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(finalfourgames) \n\nfinalfour &lt;- log_fit |&gt; predict(new_data = finalfourgames) |&gt;\n  bind_cols(finalfourgames) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nfinalfour &lt;- log_fit |&gt; predict(new_data = finalfourgames, type=\"prob\") |&gt;\n  bind_cols(finalfour) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#finalfour\n\nchampionshipgames &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Houston\"\n)\n\nchampionshipgames &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(championshipgames)\n\nchampionshipgames &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(championshipgames) \n\nchampionship &lt;- log_fit |&gt; predict(new_data = championshipgames) |&gt;\n  bind_cols(championshipgames) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nchampionship &lt;- log_fit |&gt; predict(new_data = championshipgames, type=\"prob\") |&gt;\n  bind_cols(championship) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#championship\n\n#Redo\n\nsweetsixteengames &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"San Diego St\"\n) |&gt; add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_team_short_display_name=\"Illinois\"\n) |&gt; add_row(\n  team_short_display_name=\"North Carolina\",\n  opponent_team_short_display_name=\"Alabama\"\n) |&gt; add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_team_short_display_name=\"Clemson\"\n) |&gt; add_row(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Duke\"\n) |&gt; add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_team_short_display_name=\"NC State\"\n) |&gt; add_row(\n  team_short_display_name=\"Purdue\",\n  opponent_team_short_display_name=\"Gonzaga\"\n) |&gt; add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_team_short_display_name=\"Creighton\"\n)\n\nsweetsixteengames &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(sweetsixteengames)\n\nsweetsixteengames &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(sweetsixteengames) \n\nsweetsixteen &lt;- log_fit |&gt; predict(new_data = sweetsixteengames) |&gt;\n  bind_cols(sweetsixteengames) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nsweetsixteen &lt;- log_fit |&gt; predict(new_data = sweetsixteengames, type=\"prob\") |&gt;\n  bind_cols(sweetsixteen) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#sweetsixteen\n\neliteeightgames &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Iowa State\"\n) |&gt; add_row(\n  team_short_display_name=\"North Carolina\",\n  opponent_team_short_display_name=\"Arizona\"\n) |&gt; add_row(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Marquette\"\n) |&gt; add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_team_short_display_name=\"Gonzaga\"\n)\n\neliteeightgames &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(eliteeightgames)\n\neliteeightgames &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(eliteeightgames) \n\neliteeight &lt;- log_fit |&gt; predict(new_data = eliteeightgames) |&gt;\n  bind_cols(eliteeightgames) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\neliteeight &lt;- log_fit |&gt; predict(new_data = eliteeightgames, type=\"prob\") |&gt;\n  bind_cols(eliteeight) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#eliteeight\n\nfinalfour2games &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Arizona\"\n) |&gt; add_row(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Gonzaga\"\n)\n\nfinalfour2games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(finalfour2games)\n\nfinalfour2games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(finalfour2games) \n\nfinalfour2 &lt;- log_fit |&gt; predict(new_data = finalfour2games) |&gt;\n  bind_cols(finalfour2games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nfinalfour2 &lt;- log_fit |&gt; predict(new_data = finalfour2games, type=\"prob\") |&gt;\n  bind_cols(finalfour2) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#finalfour2\n\nchampionship2games &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Houston\"\n)\n\nchampionship2games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(championship2games)\n\nchampionship2games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(championship2games) \n\nchampionship2 &lt;- log_fit |&gt; predict(new_data = championship2games) |&gt;\n  bind_cols(championship2games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nchampionship2 &lt;- log_fit |&gt; predict(new_data = championship2games, type=\"prob\") |&gt;\n  bind_cols(championship2) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#championship2"
  },
  {
    "objectID": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html",
    "href": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html",
    "title": "Using linear regression to predict fantasy rookie receiver rankings",
    "section": "",
    "text": "Who is going to be the best fantasy rookie receiver out of a stacked class? Brian Thomas Jr. Don’t believe me? Argue with coding. My code takes into account where a player was drafted, their pre draft grade, their collegiate receiving yards, their collegiate receiving touchdowns, and the three year rolling average of passing yards for the team they were drafted to. These factors result in the players overall skill set, production, and offense they are going to being taken into consideration. If I were able to add one other factor it would be if the offense they are going to has gained or lost any receivers. I think the available target share is very important for rookie receivers, and when a receiver leaves, it opens up an opportunity for the others.\nSo who are the top 10? I’ll first let my code tell you, and then have the ten names reordered in my personal preference, but am I any better than code… only time will tell.\nCode\nlibrary(tidyverse)\nlibrary(cfbfastR)\nlibrary(tidymodels)\nlibrary(zoo)\nlibrary(bonsai)\nlibrary(gt)\n\nset.seed(1234)\n\nwrpicks &lt;- read_csv(\"https://mattwaite.github.io/sportsdatafiles/wrpicks1423.csv\") |&gt; \n  mutate(college_year = year - 1)\n\nwrstats &lt;- read_csv(\"https://mattwaite.github.io/sportsdatafiles/receiving1323.csv\")\nwrusage &lt;- read_csv(\"https://mattwaite.github.io/sportsdatafiles/usage1323.csv\")\nwrfantasy &lt;- read_csv(\"https://mattwaite.github.io/sportsdatafiles/fantasystats1423.csv\") |&gt; \n  mutate(nfl_team = case_when(\n    tm == \"ARI\" ~ \"Arizona Cardinals\",\n    tm == \"ATL\" ~ \"Atlanta Falcons\",\n    tm == \"BAL\" ~ \"Baltimore Ravens\",\n    tm == \"BUF\" ~ \"Buffalo Bills\",\n    tm == \"CAR\" ~ \"Carolina Panthers\",\n    tm == \"CHI\" ~ \"Chicago Bears\",\n    tm == \"CIN\" ~ \"Cincinnati Bengals\",\n    tm == \"CLE\" ~ \"Cleveland Browns\",\n    tm == \"DAL\" ~ \"Dallas Cowboys\",\n    tm == \"DEN\" ~ \"Denver Broncos\",\n    tm == \"DET\" ~ \"Detroit Lions\",\n    tm == \"GNB\" ~ \"Green Bay Packers\",\n    tm == \"HOU\" ~ \"Houston Texans\",\n    tm == \"IND\" ~ \"Indianapolis Colts\",\n    tm == \"JAX\" ~ \"Jacksonville Jaguars\",\n    tm == \"KAN\" ~ \"Kansas City Chiefs\",\n    tm == \"LAC\" ~ \"Los Angeles Chargers\", \n    tm == \"LAR\" ~ \"Los Angeles Rams\", \n    tm == \"LVR\" ~ \"Las Vegas Raiders\",\n    tm == \"MIA\" ~ \"Miami Dolphins\",  \n    tm == \"MIN\" ~ \"Minnesota Vikings\",\n    tm == \"NOR\" ~ \"New Orleans Saints\",\n    tm == \"NWE\" ~ \"New England Patriots\",\n    tm == \"NYG\" ~ \"New York Giants\",\n    tm == \"NYJ\" ~ \"New York Jets\",\n    tm == \"OAK\" ~ \"Las Vegas Raiders\",\n    tm == \"PHI\" ~ \"Philadelphia Eagles\",\n    tm == \"PIT\" ~ \"Pittsburgh Steelers\",\n    tm == \"SDG\" ~ \"Los Angeles Chargers\",\n    tm == \"SEA\" ~ \"Seattle Seahawks\",\n    tm == \"SFO\" ~ \"San Francisco 49ers\",\n    tm == \"STL\" ~ \"Los Angeles Rams\",\n    tm == \"TAM\" ~ \"Tampa Bay Buccaneers\",\n    tm == \"TEN\" ~ \"Tennessee Titans\",\n    tm == \"WAS\" ~ \"Washington Commanders\",\n  ))\n\nnflstats &lt;- read_csv(\"https://mattwaite.github.io/sportsdatafiles/nfl_passing_offense0023.csv\") |&gt; filter(season &gt;= 2009) |&gt; \n  mutate(\n    nfl_team = case_when(\n      tm == \"Oakland Raiders\" ~ \"Las Vegas Raiders\",\n      tm == \"San Diego Chargers\" ~ \"Los Angeles Chargers\",\n      tm == \"St. Louis Rams\" ~ \"Los Angeles Rams\",\n      tm == \"Washington Football Team\" ~ \"Washington Commanders\",\n      tm == \"Washington Redskins\" ~ \"Washington Commanders\",\n      TRUE ~ tm\n      ))\n\nwrpicksselected &lt;- wrpicks |&gt; \n  select(\n    college_athlete_id,\n    nfl_athlete_id,\n    college_id,\n    name,\n    college_team, \n    college_conference,\n    nfl_team, \n    year,\n    college_year,\n    overall,\n    pre_draft_grade\n  )\n\nwrstatsselected &lt;- wrstats |&gt; \n  select(\n    athlete_id,\n    season,\n    receiving_yds\n  )\n\nwrfantasyselected &lt;- wrfantasy |&gt; \n  filter(fant_pos == \"WR\") |&gt; \n  select(\n    season,\n    player, \n    nfl_team,\n    fant_pos,\n    ppr\n  )\n\nnflpassingselected &lt;- nflstats |&gt; \n  mutate(\n    rolling_mean_passing_yards = rollmean(yds, k=3, align = \"right\", fill=NA),\n    rolling_mean_passing_tds = rollmean(td, k=3, align = \"right\", fill=NA),\n  ) |&gt; \n  filter(season &gt;= 2014) |&gt; \n  select(\n    season,\n    nfl_team,\n    rolling_mean_passing_yards,\n    rolling_mean_passing_tds\n  )\n  \nwrpicksstats &lt;- wrpicksselected |&gt; \n  inner_join(wrstatsselected, by=c(\"college_athlete_id\"=\"athlete_id\", \"college_year\" = \"season\"))\n\nwrpicksandfantasy &lt;- wrfantasyselected |&gt; \n  inner_join(wrpicksstats, by=c(\"player\" = \"name\", \"season\"=\"year\")) \n\nwrmodeling &lt;- wrpicksandfantasy |&gt;\n  left_join(nflpassingselected, by=c(\"season\"=\"season\", \"nfl_team.x\"=\"nfl_team\")) |&gt; \n  na.omit() |&gt; \n  select(-nfl_team.y)\n\nwrmodelingselected &lt;- wrmodeling |&gt; \n  select(\n    season,\n    player,\n    nfl_team.x,\n    overall,\n    rolling_mean_passing_yards,\n    # rolling_mean_passing_tds,\n    ppr\n  ) |&gt; \n  rename(\n    nfl_team = nfl_team.x\n  )\n\nplayer_split &lt;- initial_split(wrmodelingselected, prop = .8)\n\nplayer_train &lt;- training(player_split)\nplayer_test &lt;- testing(player_split)\n\nplayer_recipe &lt;- \n  recipe(ppr ~ ., data = player_train) |&gt; \n  update_role(player, season, nfl_team, new_role = \"ID\")\n\nlinear_mod &lt;- \n  linear_reg() |&gt; \n  set_engine(\"lm\") |&gt;\n  set_mode(\"regression\")\n\nlinear_workflow &lt;- \n  workflow() %&gt;% \n  add_model(linear_mod) %&gt;% \n  add_recipe(player_recipe)\n\nlinear_fit &lt;- \n  linear_workflow %&gt;% \n  fit(data = player_train)\n\n# Start the prediction for this season. The NFL team names are a mess because of choices made by the picks data provider. They just list them by city name, which creates problems in Los Angeles and New York. \n\nwrpicks &lt;- cfbd_draft_picks(year = 2024) |&gt; \n  filter(position == \"Wide Receiver\") |&gt; \n  mutate(college_year = year - 1) |&gt; \n  mutate(college_athlete_id = as.character(college_athlete_id)) |&gt; \n  mutate(nfl_team = case_when(\n    nfl_team == \"Arizona\" ~ \"Arizona Cardinals\",\n    nfl_team == \"Atlanta\" ~ \"Atlanta Falcons\",\n    nfl_team == \"Baltimore\" ~ \"Baltimore Ravens\",\n    nfl_team == \"Buffalo\" ~ \"Buffalo Bills\",\n    nfl_team == \"Carolina\" ~ \"Carolina Panthers\",\n    nfl_team == \"Chicago\" ~ \"Chicago Bears\",\n    nfl_team == \"Cincinnati\" ~ \"Cincinnati Bengals\",\n    nfl_team == \"Cleveland\" ~ \"Cleveland Browns\",\n    nfl_team == \"Dallas\" ~ \"Dallas Cowboys\",\n    nfl_team == \"Denver\" ~ \"Denver Broncos\",\n    nfl_team == \"Detroit\" ~ \"Detroit Lions\",\n    nfl_team == \"Green Bay\" ~ \"Green Bay Packers\",\n    nfl_team == \"Houston\" ~ \"Houston Texans\",\n    nfl_team == \"Indianapolis\" ~ \"Indianapolis Colts\",\n    nfl_team == \"Jacksonville\" ~ \"Jacksonville Jaguars\",\n    nfl_team == \"Kansas City\" ~ \"Kansas City Chiefs\",\n    name == \"Ladd McConkey\" ~ \"Los Angeles Chargers\", \n    name == \"Brenden Rice\" ~ \"Los Angeles Chargers\", \n    name == \"Cornelius Johnson\" ~ \"Los Angeles Chargers\",\n    name == \"Jordan Whittington\" ~ \"Los Angeles Rams\", \n    nfl_team == \"Las Vegas\" ~ \"Las Vegas Raiders\",\n    nfl_team == \"Miami\" ~ \"Miami Dolphins\",  \n    nfl_team == \"Minnesota\" ~ \"Minnesota Vikings\",\n    nfl_team == \"New Orleans\" ~ \"New Orleans Saints\",\n    nfl_team == \"New England\" ~ \"New England Patriots\",\n    name == \"Malik Nabers\" ~ \"New York Giants\",\n    nfl_team == \"New York\" ~ \"New York Jets\",\n    nfl_team == \"Philadelphia\" ~ \"Philadelphia Eagles\",\n    nfl_team == \"Pittsburgh\" ~ \"Pittsburgh Steelers\",\n    nfl_team == \"Seattle\" ~ \"Seattle Seahawks\",\n    nfl_team == \"San Francisco\" ~ \"San Francisco 49ers\",\n    nfl_team == \"St Louis\" ~ \"Los Angeles Rams\",\n    nfl_team == \"Tampa Bay\" ~ \"Tampa Bay Buccaneers\",\n    nfl_team == \"Tennessee\" ~ \"Tennessee Titans\",\n    nfl_team == \"Washington\" ~ \"Washington Commanders\",\n  ))\n\nwrstats &lt;- cfbd_stats_season_player(2023, category = \"receiving\") |&gt; \n  mutate(season = 2023)\n\nwrpicksselected &lt;- wrpicks |&gt; \n  select(\n    college_athlete_id,\n    nfl_athlete_id,\n    college_id,\n    name,\n    college_team, \n    college_conference,\n    nfl_team, \n    year,\n    college_year,\n    overall,\n    pre_draft_grade\n  )\n\n#Add new here\n\nwrstatsselected &lt;- wrstats |&gt; \n  select(\n    athlete_id,\n    season,\n    receiving_yds,\n    receiving_td\n  )\n\nwrpicksstats &lt;- wrpicksselected |&gt; \n  inner_join(wrstatsselected, by=c(\"college_athlete_id\"=\"athlete_id\", \"college_year\" = \"season\"))\n\n#Also add here\n\nwrmodeling &lt;- wrpicksstats |&gt;\n  left_join(nflpassingselected, by=c(\"college_year\"=\"season\", \"nfl_team\"=\"nfl_team\")) |&gt;\n  select(\n    year,\n    name,\n    nfl_team,\n    overall,\n    pre_draft_grade,\n    receiving_yds,\n    receiving_td,\n    rolling_mean_passing_yards,\n    # rolling_mean_passing_tds\n  ) |&gt; \n  rename(\n    player = name,\n    season = year\n  )\n\nlinearpredict &lt;- \n  linear_fit %&gt;% \n  predict(new_data = wrmodeling) %&gt;%\n  bind_cols(wrmodeling) \n\n# now that we have predictions, make the table\n\nlinearpredict |&gt; \n  select(player, nfl_team, overall, .pred) |&gt; \n  top_n(10, wt=.pred) |&gt; \n  arrange(desc(.pred)) |&gt; \n  gt() |&gt; \n  cols_label(\n    player = \"Player\",\n    nfl_team = \"Team\",\n    overall = \"Pick\",\n    .pred = \"Predicted fantasy points\"\n  )  |&gt;\n  tab_header(\n    title = \"Predicting the top fantasy rookie wide receivers\",\n    subtitle = \"Using draft grades, where they were drafted, college production, and who they were drafted by, these receivers could be the steal of the late round fantasy football drafts. Call the predicted points a safe bet -- an average outcome -- not a ceiling or a floor.\"\n  ) |&gt; tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) |&gt; tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) |&gt;\n  tab_source_note(\n    source_note = md(\"**By:** Gunnar Lombard  |  **Source:** CFDB, Pro-Football Reference\")\n  ) |&gt;\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) |&gt;\n  opt_row_striping() |&gt; \n  opt_table_lines(\"none\")\n\n\n\n\n\n\n\n\n\nPredicting the top fantasy rookie wide receivers\n\n\nUsing draft grades, where they were drafted, college production, and who they were drafted by, these receivers could be the steal of the late round fantasy football drafts. Call the predicted points a safe bet -- an average outcome -- not a ceiling or a floor.\n\n\nPlayer\nTeam\nPick\nPredicted fantasy points\n\n\n\n\nBrian Thomas Jr.\nJacksonville Jaguars\n23\n123.3639\n\n\nXavier Worthy\nKansas City Chiefs\n28\n123.1849\n\n\nRicky Pearsall\nSan Francisco 49ers\n31\n122.9011\n\n\nMarvin Harrison Jr.\nArizona Cardinals\n4\n118.7818\n\n\nKeon Coleman\nBuffalo Bills\n33\n118.5993\n\n\nRome Odunze\nChicago Bears\n9\n115.4285\n\n\nLadd McConkey\nLos Angeles Chargers\n34\n115.1348\n\n\nMalik Nabers\nNew York Giants\n6\n114.3322\n\n\nAdonai Mitchell\nIndianapolis Colts\n52\n101.9122\n\n\nJa'Lynn Polk\nNew England Patriots\n37\n100.7684\n\n\n\nBy: Gunnar Lombard | Source: CFDB, Pro-Football Reference"
  },
  {
    "objectID": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#brian-thomas-jr.-jacksonville-jaguars-drafted-23",
    "href": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#brian-thomas-jr.-jacksonville-jaguars-drafted-23",
    "title": "Using linear regression to predict fantasy rookie receiver rankings",
    "section": "1. Brian Thomas Jr., Jacksonville Jaguars, Drafted #23",
    "text": "1. Brian Thomas Jr., Jacksonville Jaguars, Drafted #23\nIt may seem weird why the 23rd pick is projected more fantasy points than the 4th, 6th, and 9th pick. Brian Thomas Jr. just happens to be the perfect mixture between a highly rated pre-draft receiver and going to a team that has been able to pass the ball efficiently the past couple of years. He is higher rated and a higher draft pick than the players who are going to a better passing team, but is going to a better passing team than those who are rated higher than him."
  },
  {
    "objectID": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#xavier-worthy-kansas-city-chiefs-drafted-28",
    "href": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#xavier-worthy-kansas-city-chiefs-drafted-28",
    "title": "Using linear regression to predict fantasy rookie receiver rankings",
    "section": "2. Xavier Worthy, Kansas City Chiefs, Drafted #28",
    "text": "2. Xavier Worthy, Kansas City Chiefs, Drafted #28\nThe speedster is certainly being boosted by going to arguably the best team in the NFL. The 8th rated prospect and 5th drafted receiver happens to slot in to a passing attack led by the best quarterback in the NFL in Patrick Mahomes. I think he will be able to succeed as Mahomes can launch a ball as seen with Tyreek Hill in years past."
  },
  {
    "objectID": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#ricky-pearsall-san-francisco-49ers-drafted-31",
    "href": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#ricky-pearsall-san-francisco-49ers-drafted-31",
    "title": "Using linear regression to predict fantasy rookie receiver rankings",
    "section": "3. Ricky Pearsall, San Francisco 49ers, Drafted #31",
    "text": "3. Ricky Pearsall, San Francisco 49ers, Drafted #31\nRicky Pearsall falls into a very similar category as Xavier Worthy - not the best prospect or highest drafted, but going to a very established offense. I would personally not be as high on Ricky as the 49ers have a ton of weapons that already command targets, but the model would struggle to gauge competition for targets."
  },
  {
    "objectID": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#marvin-harrison-jr.-arizona-cardinals-drafted-4",
    "href": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#marvin-harrison-jr.-arizona-cardinals-drafted-4",
    "title": "Using linear regression to predict fantasy rookie receiver rankings",
    "section": "4. Marvin Harrison Jr., Arizona Cardinals, Drafted #4",
    "text": "4. Marvin Harrison Jr., Arizona Cardinals, Drafted #4\nThe best receiving prospect in our data with the exception of Sammy Watkins is projected the fourth most fantasy points for rookie receivers. I would certainly rank him at the top of the rankings as he has very little target competition and is getting a healthy Kyler Murray back who has proven to be able to provide top tier fantasy options such as DeAndre Hopkins. He falls in the ranking as a result of a hurt Kyler Murray which has resulted in back to back years of low passing yards from the Cardinals."
  },
  {
    "objectID": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#keon-coleman-buffalo-bills-drafted-33",
    "href": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#keon-coleman-buffalo-bills-drafted-33",
    "title": "Using linear regression to predict fantasy rookie receiver rankings",
    "section": "5. Keon Coleman, Buffalo Bills, Drafted #33",
    "text": "5. Keon Coleman, Buffalo Bills, Drafted #33\nKeon is going into one of the best situations a rookie can ask for. He has Josh Allen passing him the rock in an offense that just lost their top receiver in Diggs and will be looking for someone to help fill his role. Despite being rated as the 10th receiver, his situation boosts him to a top 5 projected for rookie receivers."
  },
  {
    "objectID": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#rome-odunze-chicago-bears-drafted-9",
    "href": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#rome-odunze-chicago-bears-drafted-9",
    "title": "Using linear regression to predict fantasy rookie receiver rankings",
    "section": "6. Rome Odunze, Chicago Bears, Drafted #9",
    "text": "6. Rome Odunze, Chicago Bears, Drafted #9\nRome is going to struggle for targets in an offense that has added Keenan Allen to a receiving room with DJ Moore and Cole Kmet as a TE. There is also going to be a big adjustment for QB Caleb Williams getting him the ball. However, he is an elite prospect and carved up defenses in college and I would expect him to slowly gain a target share in Chicago."
  },
  {
    "objectID": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#ladd-mcconkey-los-angeles-chargers-drafted-34",
    "href": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#ladd-mcconkey-los-angeles-chargers-drafted-34",
    "title": "Using linear regression to predict fantasy rookie receiver rankings",
    "section": "7. Ladd McConkey, Los Angeles Chargers, Drafted #34",
    "text": "7. Ladd McConkey, Los Angeles Chargers, Drafted #34\nThe elite route runner is going to an offense that LOVES to throw the ball and just lost their top two receivers in Keenan Allen and Mike Williams. However they also got a coach who is known for running the ball in Jim Harbaugh (cheater) and never finished higher than 29th (out of 32) in passing attempts while coaching the 49ers. I think with Herbert, the Chargers will still throw the ball a fair share and Ladd could certainly capitalize."
  },
  {
    "objectID": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#malik-nabers-new-york-giants-drafted-6",
    "href": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#malik-nabers-new-york-giants-drafted-6",
    "title": "Using linear regression to predict fantasy rookie receiver rankings",
    "section": "8. Malik Nabers, New York Giants, Drafted #6",
    "text": "8. Malik Nabers, New York Giants, Drafted #6\nMalik Nabers’s skill and elite prospect level has been overshadowed by the generational Marvin Harrison Jr. He is tied with Marv as a 95 pre-draft rated receiver and would’ve been the top receiver off the board in just about any other draft. Unfortunately for him, he’s going to a team that has struggled mightily with passing the ball over the past few years which is why he has fallen to 8th in this model."
  },
  {
    "objectID": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#adonai-mitchell-indianapolis-colts-drafted-52",
    "href": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#adonai-mitchell-indianapolis-colts-drafted-52",
    "title": "Using linear regression to predict fantasy rookie receiver rankings",
    "section": "9. Adonai Mitchell, Indianapolis Colts, Drafted #52",
    "text": "9. Adonai Mitchell, Indianapolis Colts, Drafted #52\nThe second Texas receiver off the board goes to a situation not nearly as ideal as Worthy going to the Chiefs. He still performed well in college and was ranked one spot higher than his Longhorn teammate but slightly fell in the draft. This balance between middle of the pack passing team, decent draft grade, but slipping in the draft results in Adonai coming in as the 9th highest projected rookie receiver."
  },
  {
    "objectID": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#jalynn-polk-new-england-patriots-drafted-37",
    "href": "posts/predicting-the-top-rookie-fantasy-WRs-in-2024/index.html#jalynn-polk-new-england-patriots-drafted-37",
    "title": "Using linear regression to predict fantasy rookie receiver rankings",
    "section": "10. Ja’Lynn Polk, New England Patriots, Drafted #37",
    "text": "10. Ja’Lynn Polk, New England Patriots, Drafted #37\nThe 11th ranked pre-draft receiver goes to a team that drafted his soon to be quarterback in the first round in Drake Maye. New leadership in New England could change their offensive attack, but post-Brady, they aren’t known to be a pass heavy team. I don’t think we’ll see anything to great out of Polk, but with little target competition, we could see a mid-season add for fantasy teams.\n\nMarvin Harrison Jr.\nMalik Nabers\nBrian Thomas Jr.\nXavier Worthy\nKeon Coleman\nLadd McConkey\nRome Odunze\nAdonai Mitchell\nJa’Lynn Polk\nRicky Pearsall\n\nLet’s revisit after the season and see how my predictions compare to my codes :)"
  }
]