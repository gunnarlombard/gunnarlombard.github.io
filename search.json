[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Latest Posts",
    "section": "",
    "text": "How good is code at predicting the 2024 NCAA Bracket\n\n\n\n\n\n\nncaa\n\n\nmachinelearning\n\n\nbasketball\n\n\n\n\n\n\n\n\n\nApr 4, 2024\n\n\nGunnar Lombard\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nApr 4, 2024\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nApr 1, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/how-good-is-code-at-predicting-the-2024-ncaa-bracket/index.html",
    "href": "posts/how-good-is-code-at-predicting-the-2024-ncaa-bracket/index.html",
    "title": "How good is code at predicting the 2024 NCAA Bracket",
    "section": "",
    "text": "How Good Is Code At Predicting The 2024 March Madness Bracket? It was far better than trying to pick the games myself. Using code, my bracket correctly predicted the eventual National Champion UConn Huskies which boosted the percentage to 76.7%. My best region was the East Region as that was the only correct final four prediction for my model.\n\nUpon research, there are a few factors that were important for determining a good basketball team. One of the most direct ones is offensive and defensive efficiency. A few that particularly predict a good March Madness run is a strong group of upperclassmen and a seasoned coach. I also believe that teams can go on hot streaks, particularly from the offensive side of the ball. With these being stated, my model considered offensive and defensive efficiency, a rolling offensive efficiency of 5 games, and a season long three-point shooting percentage.\nIn the Midwest, my model went 4/4 on Sweet Sixteen teams. However, much like my personal bracket, my model expected Purdue to choke early in the tournament as they usually do.\nThe pick that had the biggest negative impact on my bracket was Saint Mary’s going to the final four, but they instead lost to twelve seed Grand Canyon in round one. There was also a significant missed opportunity as my model did not pick the eventual South Region champions NC State Wolfpack to make it out of the first round.\nMore often than not, when my model missed it was because it was too conservative, picking the better seed to advance when an upset happened. In the first round, of the 14 games my model missed, 9 of the picks were the better seed that got upset. However, my model did predict two double digit seeds to make it to the Sweet Sixteen, JMU and New Mexico State, but only 11 seed NC State did make it. My model took a couple “swings,” but missed both times. Neither of the two teams that my model picked were particularly strong three-point shooting teams, but one thing to note is they both won their conference tournaments and were thus coming off some strong performances recently, boosting their 5 game rolling average offensive efficiency. Therefore, I believe that is why my model was high on those teams going into the tournament.\nOverall, my code did decently well in the first and second round of the bracket but fell off steeply for the sweet sixteen and elite eight. Having the correct champion is what salvaged my bracket over the final two rounds of the tournament.\n\nIf I were to go through this process again, I would try to implement a factor for how old the starting lineups are for the tournament teams. In the championship game we had 4 seniors, 5 sophomores, and only 1 freshman starting between the two teams. Both team’s sixth men were also seniors, further showing the importance of a strong group of upperclassmen. The coaches were also both experienced having been coaching since 2018 and 2005 for Dan Hurley of UConn and Matt Painter of Purdue, respectively.\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(hoopR)\nlibrary(zoo)\nlibrary(gt)\nlibrary(bonsai)\nset.seed(1234)\n\ngames &lt;- load_mbb_team_box(seasons = 2015:2024) |&gt; filter(game_date &lt; as.Date(\"2024-03-18\"))\n\nnond1 &lt;- games |&gt; \n  group_by(team_id, season) |&gt; \n  tally() |&gt; \n  filter(n &lt; 10 & season!= 2021) |&gt; \n  select(team_id)\nnond1 &lt;- pull(nond1)\n\ndf &lt;- games |&gt; filter(!team_id %in% nond1 & !opponent_team_id %in% nond1)\n\n\n#Creating fit model\nteamside &lt;- df |&gt; \n  group_by(team_id, season) |&gt; \n  arrange(game_date) |&gt; \n  mutate(\n    team_possessions = field_goals_attempted - offensive_rebounds + turnovers + (.475 * free_throws_attempted),\n    team_points_per_possession = team_score/team_possessions,\n    team_defensive_points_per_possession = opponent_team_score/team_possessions,\n    team_offensive_efficiency = team_points_per_possession * 100,\n    team_defensive_efficiency = team_defensive_points_per_possession * 100,\n    team_season_offensive_efficiency = lag(cummean(team_offensive_efficiency), n=1),\n    team_season_defensive_efficiency = lag(cummean(team_defensive_efficiency), n=1),  \n    score_margin = team_score - opponent_team_score,\n    absolute_score_margin = abs(score_margin),\n    team_rolling_mean_2_offensive_efficiency = rollmean(lag(team_offensive_efficiency, n=1), k=2, align=\"right\", fill=NA),\n    team_mean_season_three_point_field_goal_pct = lag(cummean(three_point_field_goal_pct), n=1)\n  ) |&gt; \n  filter(absolute_score_margin &lt;= 40) |&gt; \n  ungroup()\n\nopponentside &lt;- teamside |&gt; \n  select(-opponent_team_id) |&gt; \n  rename(\n    opponent_team_id = team_id,\n    opponent_season_offensive_efficiency = team_season_offensive_efficiency,\n    opponent_season_defensive_efficiency = team_season_defensive_efficiency,\n    opponent_rolling_mean_2_offensive_efficiency = team_rolling_mean_2_offensive_efficiency,\n    opponent_mean_season_three_point_field_goal_pct = team_mean_season_three_point_field_goal_pct\n  ) |&gt; \n  select(\n    game_id,\n    opponent_team_id,\n    opponent_season_offensive_efficiency,\n    opponent_season_defensive_efficiency,\n    opponent_rolling_mean_2_offensive_efficiency,\n    opponent_mean_season_three_point_field_goal_pct\n  )\n\nbothsides &lt;- teamside |&gt; inner_join(opponentside)\n\nbothsides &lt;- bothsides |&gt; mutate(\n  team_result = as.factor(case_when(\n    team_score &gt; opponent_team_score ~ \"W\",\n    opponent_team_score &gt; team_score ~ \"L\"\n)))\n\nbothsides$team_result &lt;- relevel(bothsides$team_result, ref=\"W\")\n\n#levels(bothsides$team_result)\n\nmodelgames &lt;- bothsides |&gt; \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_team_short_display_name, \n    season, \n    team_season_offensive_efficiency,\n    team_season_defensive_efficiency,\n    opponent_season_offensive_efficiency,\n    opponent_season_defensive_efficiency,\n    team_rolling_mean_2_offensive_efficiency,\n    opponent_rolling_mean_2_offensive_efficiency,\n    team_mean_season_three_point_field_goal_pct,\n    opponent_mean_season_three_point_field_goal_pct,\n    team_result\n    ) |&gt; na.omit()\n\ngame_split &lt;- initial_split(modelgames, prop = .8)\ngame_train &lt;- training(game_split)\ngame_test &lt;- testing(game_split)\n\nlog_mod &lt;- \n  logistic_reg() |&gt; \n  set_engine(\"glm\") |&gt;\n  set_mode(\"classification\")\n\ngame_recipe &lt;- \n  recipe(team_result ~ ., data = game_train) |&gt; \n  update_role(game_id, game_date, team_short_display_name, opponent_team_short_display_name, season, new_role = \"ID\") |&gt;\n  step_normalize(all_predictors())\n\n#summary(game_recipe)\n\nlog_workflow &lt;- \n  workflow() |&gt; \n  add_model(log_mod) |&gt; \n  add_recipe(game_recipe)\n\nlog_fit &lt;- \n  log_workflow |&gt; \n  fit(data = game_train)\n\ntrainpredict &lt;- log_fit |&gt; predict(new_data = game_train) |&gt;\n  bind_cols(game_train)\n\n#head(trainpredict)\n\n#Reseting for no lag\n\nteamside &lt;- df |&gt; \n  group_by(team_id, season) |&gt; \n  arrange(game_date) |&gt; \n  mutate(\n    team_possessions = field_goals_attempted - offensive_rebounds + turnovers + (.475 * free_throws_attempted),\n    team_points_per_possession = team_score/team_possessions,\n    team_defensive_points_per_possession = opponent_team_score/team_possessions,\n    team_offensive_efficiency = team_points_per_possession * 100,\n    team_defensive_efficiency = team_defensive_points_per_possession * 100,\n    team_season_offensive_efficiency = cummean(team_offensive_efficiency),\n    team_season_defensive_efficiency = cummean(team_defensive_efficiency),  \n    score_margin = team_score - opponent_team_score,\n    absolute_score_margin = abs(score_margin),\n    team_rolling_mean_2_offensive_efficiency = rollmean(team_offensive_efficiency, k=2, align=\"right\", fill=NA),\n    team_mean_season_three_point_field_goal_pct = cummean(three_point_field_goal_pct)\n  ) |&gt; \n  filter(absolute_score_margin &lt;= 40) |&gt; \n  ungroup()\n\nopponentside &lt;- teamside |&gt; \n  select(-opponent_team_id) |&gt; \n  rename(\n    opponent_team_id = team_id,\n    opponent_season_offensive_efficiency = team_season_offensive_efficiency,\n    opponent_season_defensive_efficiency = team_season_defensive_efficiency,\n    opponent_rolling_mean_2_offensive_efficiency = team_rolling_mean_2_offensive_efficiency,\n    opponent_mean_season_three_point_field_goal_pct = team_mean_season_three_point_field_goal_pct\n  ) |&gt; \n  select(\n    game_id,\n    opponent_team_id,\n    opponent_season_offensive_efficiency,\n    opponent_season_defensive_efficiency,\n    opponent_rolling_mean_2_offensive_efficiency,\n    opponent_mean_season_three_point_field_goal_pct\n  )\n\nbothsides &lt;- teamside |&gt; inner_join(opponentside)\n\nbothsides &lt;- bothsides |&gt; mutate(\n  team_result = as.factor(case_when(\n    team_score &gt; opponent_team_score ~ \"W\",\n    opponent_team_score &gt; team_score ~ \"L\"\n)))\n\nbothsides$team_result &lt;- relevel(bothsides$team_result, ref=\"W\")\n\n#levels(bothsides$team_result)\n\nmodelgames &lt;- bothsides |&gt; \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_team_short_display_name, \n    season, \n    team_season_offensive_efficiency,\n    team_season_defensive_efficiency,\n    opponent_season_offensive_efficiency,\n    opponent_season_defensive_efficiency,\n    team_rolling_mean_2_offensive_efficiency,\n    opponent_rolling_mean_2_offensive_efficiency,\n    team_mean_season_three_point_field_goal_pct,\n    opponent_mean_season_three_point_field_goal_pct,\n    team_result\n    ) |&gt; na.omit()\n\nplayingames &lt;- tibble(\n  team_short_display_name =\"Howard\",\n  opponent_team_short_display_name = \"Wagner\"\n) |&gt; add_row(\n  team_short_display_name = \"Boise St\",\n  opponent_team_short_display_name = \"Colorado\"\n) |&gt; add_row(\n  team_short_display_name = \"Montana St\",\n  opponent_team_short_display_name = \"Grambling\"\n) |&gt; add_row(\n  team_short_display_name = \"Colorado St\",\n  opponent_team_short_display_name = \"Virginia\"\n)\n\nplayingames &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(playingames)\n\nplayingames &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(playingames) \n\nplayin &lt;- log_fit |&gt; predict(new_data = playingames) |&gt;\n  bind_cols(playingames) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nplayin &lt;- log_fit |&gt; predict(new_data = playingames, type=\"prob\") |&gt;\n  bind_cols(playin) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#playin\n\n#East Region\n\neastround1games &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Stetson\"\n) |&gt; add_row(\n  team_short_display_name=\"FAU\",\n  opponent_team_short_display_name=\"Northwestern\"\n) |&gt; add_row(\n  team_short_display_name=\"San Diego St\",\n  opponent_team_short_display_name=\"UAB\"\n) |&gt; add_row(\n  team_short_display_name=\"Auburn\",\n  opponent_team_short_display_name=\"Yale\"\n) |&gt; add_row(\n  team_short_display_name=\"BYU\",\n  opponent_team_short_display_name=\"Duquesne\"\n) |&gt; add_row(\n  team_short_display_name=\"Illinois\",\n  opponent_team_short_display_name=\"Morehead St\"\n) |&gt; add_row(\n  team_short_display_name=\"Washington St\",\n  opponent_team_short_display_name=\"Drake\"\n) |&gt; add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_team_short_display_name=\"S Dakota St\"\n)\n\neastround1games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(eastround1games)\n\neastround1games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(eastround1games) \n\neastround1 &lt;- log_fit |&gt; predict(new_data = eastround1games) |&gt;\n  bind_cols(eastround1games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\neastround1 &lt;- log_fit |&gt; predict(new_data = eastround1games, type=\"prob\") |&gt;\n  bind_cols(eastround1) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#eastround1\n\neastround2games &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"FAU\"\n) |&gt; add_row(\n  team_short_display_name=\"Auburn\",\n  opponent_team_short_display_name=\"San Diego St\"\n) |&gt; add_row(\n  team_short_display_name=\"Illinois\",\n  opponent_team_short_display_name=\"BYU\"\n) |&gt; add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_team_short_display_name=\"Drake\"\n)\n\neastround2games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(eastround2games)\n\neastround2games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(eastround2games) \n\neastround2 &lt;- log_fit |&gt; predict(new_data = eastround2games) |&gt;\n  bind_cols(eastround2games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\neastround2 &lt;- log_fit |&gt; predict(new_data = eastround2games, type=\"prob\") |&gt;\n  bind_cols(eastround2) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#eastround2\n\neastround3games &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Auburn\"\n) |&gt; add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_team_short_display_name=\"BYU\"\n)\n\neastround3games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(eastround3games)\n\neastround3games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(eastround3games) \n\neastround3 &lt;- log_fit |&gt; predict(new_data = eastround3games) |&gt;\n  bind_cols(eastround3games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\neastround3 &lt;- log_fit |&gt; predict(new_data = eastround3games, type=\"prob\") |&gt;\n  bind_cols(eastround3) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#eastround3\n\neastround4games &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"BYU\"\n)\n\neastround4games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(eastround4games)\n\neastround4games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(eastround4games) \n\neastround4 &lt;- log_fit |&gt; predict(new_data = eastround4games) |&gt;\n  bind_cols(eastround4games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\neastround4 &lt;- log_fit |&gt; predict(new_data = eastround4games, type=\"prob\") |&gt;\n  bind_cols(eastround4) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#eastround4\n\n#West Region\n\nwestround1games &lt;- tibble(\n  team_short_display_name=\"North Carolina\",\n  opponent_team_short_display_name=\"Wagner\"\n) |&gt; add_row(\n  team_short_display_name=\"Mississippi St\",\n  opponent_team_short_display_name=\"Michigan St\"\n) |&gt; add_row(\n  team_short_display_name=\"Saint Mary's\",\n  opponent_team_short_display_name=\"Grand Canyon\"\n) |&gt; add_row(\n  team_short_display_name=\"Alabama\",\n  opponent_team_short_display_name=\"Charleston\"\n) |&gt; add_row(\n  team_short_display_name=\"Clemson\",\n  opponent_team_short_display_name=\"New Mexico\"\n) |&gt; add_row(\n  team_short_display_name=\"Baylor\",\n  opponent_team_short_display_name=\"Colgate\"\n) |&gt; add_row(\n  team_short_display_name=\"Dayton\",\n  opponent_team_short_display_name=\"Nevada\"\n) |&gt; add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_team_short_display_name=\"Long Beach St\"\n)\n\nwestround1games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(westround1games)\n\nwestround1games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(westround1games) \n\nwestround1 &lt;- log_fit |&gt; predict(new_data = westround1games) |&gt;\n  bind_cols(westround1games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nwestround1 &lt;- log_fit |&gt; predict(new_data = westround1games, type=\"prob\") |&gt;\n  bind_cols(westround1) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#westround1\n\nwestround2games &lt;- tibble(\n  team_short_display_name=\"North Carolina\",\n  opponent_team_short_display_name=\"Michigan St\"\n) |&gt; add_row(\n  team_short_display_name=\"Alabama\",\n  opponent_team_short_display_name=\"Saint Mary's\"\n) |&gt; add_row(\n  team_short_display_name=\"Baylor\",\n  opponent_team_short_display_name=\"New Mexico\"\n) |&gt; add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_team_short_display_name=\"Nevada\"\n)\n\nwestround2games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(westround2games)\n\nwestround2games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(westround2games) \n\nwestround2 &lt;- log_fit |&gt; predict(new_data = westround2games) |&gt;\n  bind_cols(westround2games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nwestround2 &lt;- log_fit |&gt; predict(new_data = westround2games, type=\"prob\") |&gt;\n  bind_cols(westround2) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#westround2\n\nwestround3games &lt;- tibble(\n  team_short_display_name=\"North Carolina\",\n  opponent_team_short_display_name=\"Saint Mary's\"\n) |&gt; add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_team_short_display_name=\"New Mexico\"\n)\n\nwestround3games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(westround3games)\n\nwestround3games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(westround3games) \n\nwestround3 &lt;- log_fit |&gt; predict(new_data = westround3games) |&gt;\n  bind_cols(westround3games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nwestround3 &lt;- log_fit |&gt; predict(new_data = westround3games, type=\"prob\") |&gt;\n  bind_cols(westround3) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#westround3\n\nwestround4games &lt;- tibble(\n  team_short_display_name=\"Arizona\",\n  opponent_team_short_display_name=\"Saint Mary's\"\n)\n\nwestround4games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(westround4games)\n\nwestround4games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(westround4games) \n\nwestround4 &lt;- log_fit |&gt; predict(new_data = westround4games) |&gt;\n  bind_cols(westround4games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nwestround4 &lt;- log_fit |&gt; predict(new_data = westround4games, type=\"prob\") |&gt;\n  bind_cols(westround4) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#westround4\n\n#South Region\n\nsouthround1games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Longwood\"\n) |&gt; add_row(\n  team_short_display_name=\"Nebraska\",\n  opponent_team_short_display_name=\"Texas A&M\"\n) |&gt; add_row(\n  team_short_display_name=\"Wisconsin\",\n  opponent_team_short_display_name=\"James Madison\"\n) |&gt; add_row(\n  team_short_display_name=\"Duke\",\n  opponent_team_short_display_name=\"Vermont\"\n) |&gt; add_row(\n  team_short_display_name=\"Texas Tech\",\n  opponent_team_short_display_name=\"NC State\"\n) |&gt; add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_team_short_display_name=\"Oakland\"\n) |&gt; add_row(\n  team_short_display_name=\"Florida\",\n  opponent_team_short_display_name=\"Colorado\"\n) |&gt; add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_team_short_display_name=\"Western KY\"\n)\n\nsouthround1games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(southround1games)\n\nsouthround1games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(southround1games) \n\nsouthround1 &lt;- log_fit |&gt; predict(new_data = southround1games) |&gt;\n  bind_cols(southround1games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nsouthround1 &lt;- log_fit |&gt; predict(new_data = southround1games, type=\"prob\") |&gt;\n  bind_cols(southround1) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#southround1\n\nsouthround2games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Nebraska\"\n) |&gt; add_row(\n  team_short_display_name=\"Duke\",\n  opponent_team_short_display_name=\"James Madison\"\n) |&gt; add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_team_short_display_name=\"Texas Tech\"\n) |&gt; add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_team_short_display_name=\"Florida\"\n)\n\nsouthround2games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(southround2games)\n\nsouthround2games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(southround2games) \n\nsouthround2 &lt;- log_fit |&gt; predict(new_data = southround2games) |&gt;\n  bind_cols(southround2games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nsouthround2 &lt;- log_fit |&gt; predict(new_data = southround2games, type=\"prob\") |&gt;\n  bind_cols(southround2) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#southround2\n\nsouthround3games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"James Madison\"\n) |&gt; add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_team_short_display_name=\"Kentucky\"\n)\n\nsouthround3games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(southround3games)\n\nsouthround3games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(southround3games) \n\nsouthround3 &lt;- log_fit |&gt; predict(new_data = southround3games) |&gt;\n  bind_cols(southround3games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nsouthround3 &lt;- log_fit |&gt; predict(new_data = southround3games, type=\"prob\") |&gt;\n  bind_cols(southround3) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#southround3\n\nsouthround4games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Kentucky\"\n)\n\nsouthround4games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(southround4games)\n\nsouthround4games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(southround4games) \n\nsouthround4 &lt;- log_fit |&gt; predict(new_data = southround4games) |&gt;\n  bind_cols(southround4games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nsouthround4 &lt;- log_fit |&gt; predict(new_data = southround4games, type=\"prob\") |&gt;\n  bind_cols(southround4) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#southround4\n\n#Midwest Region\n\nmidwestround1games &lt;- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_team_short_display_name=\"Grambling\"\n) |&gt; add_row(\n  team_short_display_name=\"Utah State\",\n  opponent_team_short_display_name=\"TCU\"\n) |&gt; add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_team_short_display_name=\"McNeese\"\n) |&gt; add_row(\n  team_short_display_name=\"Kansas\",\n  opponent_team_short_display_name=\"Samford\"\n) |&gt; add_row(\n  team_short_display_name=\"South Carolina\",\n  opponent_team_short_display_name=\"Oregon\"\n) |&gt; add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_team_short_display_name=\"Akron\"\n) |&gt; add_row(\n  team_short_display_name=\"Texas\",\n  opponent_team_short_display_name=\"Colorado St\"\n) |&gt; add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_team_short_display_name=\"Saint Peter's\"\n)\n\nmidwestround1games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(midwestround1games)\n\nmidwestround1games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(midwestround1games) \n\nmidwestround1 &lt;- log_fit |&gt; predict(new_data = midwestround1games) |&gt;\n  bind_cols(midwestround1games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nmidwestround1 &lt;- log_fit |&gt; predict(new_data = midwestround1games, type=\"prob\") |&gt;\n  bind_cols(midwestround1) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#midwestround1\n\nmidwestround2games &lt;- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_team_short_display_name=\"Utah State\"\n) |&gt; add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_team_short_display_name=\"Samford\"\n) |&gt; add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_team_short_display_name=\"South Carolina\"\n) |&gt; add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_team_short_display_name=\"Colorado St\"\n)\n\nmidwestround2games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(midwestround2games)\n\nmidwestround2games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(midwestround2games) \n\nmidwestround2 &lt;- log_fit |&gt; predict(new_data = midwestround2games) |&gt;\n  bind_cols(midwestround2games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nmidwestround2 &lt;- log_fit |&gt; predict(new_data = midwestround2games, type=\"prob\") |&gt;\n  bind_cols(midwestround2) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#midwestround2\n\nmidwestround3games &lt;- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_team_short_display_name=\"Gonzaga\"\n) |&gt; add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_team_short_display_name=\"Creighton\"\n)\n\nmidwestround3games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(midwestround3games)\n\nmidwestround3games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(midwestround3games) \n\nmidwestround3 &lt;- log_fit |&gt; predict(new_data = midwestround3games) |&gt;\n  bind_cols(midwestround3games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nmidwestround3 &lt;- log_fit |&gt; predict(new_data = midwestround3games, type=\"prob\") |&gt;\n  bind_cols(midwestround3) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#midwestround3\n\nmidwestround4games &lt;- tibble(\n  team_short_display_name=\"Tennessee\",\n  opponent_team_short_display_name=\"Gonzaga\"\n)\n\nmidwestround4games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(midwestround4games)\n\nmidwestround4games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(midwestround4games) \n\nmidwestround4 &lt;- log_fit |&gt; predict(new_data = midwestround4games) |&gt;\n  bind_cols(midwestround4games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nmidwestround4 &lt;- log_fit |&gt; predict(new_data = midwestround4games, type=\"prob\") |&gt;\n  bind_cols(midwestround4) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#midwestround4\n\n#Final Four and Beyond\n\nfinalfourgames &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Saint Mary's\"\n) |&gt; add_row(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Gonzaga\"\n)\n\nfinalfourgames &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(finalfourgames)\n\nfinalfourgames &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(finalfourgames) \n\nfinalfour &lt;- log_fit |&gt; predict(new_data = finalfourgames) |&gt;\n  bind_cols(finalfourgames) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nfinalfour &lt;- log_fit |&gt; predict(new_data = finalfourgames, type=\"prob\") |&gt;\n  bind_cols(finalfour) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#finalfour\n\nchampionshipgames &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Houston\"\n)\n\nchampionshipgames &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(championshipgames)\n\nchampionshipgames &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(championshipgames) \n\nchampionship &lt;- log_fit |&gt; predict(new_data = championshipgames) |&gt;\n  bind_cols(championshipgames) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nchampionship &lt;- log_fit |&gt; predict(new_data = championshipgames, type=\"prob\") |&gt;\n  bind_cols(championship) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#championship\n\n#Redo\n\nsweetsixteengames &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"San Diego St\"\n) |&gt; add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_team_short_display_name=\"Illinois\"\n) |&gt; add_row(\n  team_short_display_name=\"North Carolina\",\n  opponent_team_short_display_name=\"Alabama\"\n) |&gt; add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_team_short_display_name=\"Clemson\"\n) |&gt; add_row(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Duke\"\n) |&gt; add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_team_short_display_name=\"NC State\"\n) |&gt; add_row(\n  team_short_display_name=\"Purdue\",\n  opponent_team_short_display_name=\"Gonzaga\"\n) |&gt; add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_team_short_display_name=\"Creighton\"\n)\n\nsweetsixteengames &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(sweetsixteengames)\n\nsweetsixteengames &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(sweetsixteengames) \n\nsweetsixteen &lt;- log_fit |&gt; predict(new_data = sweetsixteengames) |&gt;\n  bind_cols(sweetsixteengames) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nsweetsixteen &lt;- log_fit |&gt; predict(new_data = sweetsixteengames, type=\"prob\") |&gt;\n  bind_cols(sweetsixteen) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#sweetsixteen\n\neliteeightgames &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Iowa State\"\n) |&gt; add_row(\n  team_short_display_name=\"North Carolina\",\n  opponent_team_short_display_name=\"Arizona\"\n) |&gt; add_row(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Marquette\"\n) |&gt; add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_team_short_display_name=\"Gonzaga\"\n)\n\neliteeightgames &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(eliteeightgames)\n\neliteeightgames &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(eliteeightgames) \n\neliteeight &lt;- log_fit |&gt; predict(new_data = eliteeightgames) |&gt;\n  bind_cols(eliteeightgames) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\neliteeight &lt;- log_fit |&gt; predict(new_data = eliteeightgames, type=\"prob\") |&gt;\n  bind_cols(eliteeight) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#eliteeight\n\nfinalfour2games &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Arizona\"\n) |&gt; add_row(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Gonzaga\"\n)\n\nfinalfour2games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(finalfour2games)\n\nfinalfour2games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(finalfour2games) \n\nfinalfour2 &lt;- log_fit |&gt; predict(new_data = finalfour2games) |&gt;\n  bind_cols(finalfour2games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nfinalfour2 &lt;- log_fit |&gt; predict(new_data = finalfour2games, type=\"prob\") |&gt;\n  bind_cols(finalfour2) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#finalfour2\n\nchampionship2games &lt;- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Houston\"\n)\n\nchampionship2games &lt;- modelgames |&gt; \n  group_by(team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"opponent\")) |&gt; \n  right_join(championship2games)\n\nchampionship2games &lt;- modelgames |&gt; \n  group_by(opponent_team_short_display_name) |&gt; \n  filter(game_date == max(game_date) & season == 2024) |&gt; \n  ungroup() |&gt; \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |&gt; \n  right_join(championship2games) \n\nchampionship2 &lt;- log_fit |&gt; predict(new_data = championship2games) |&gt;\n  bind_cols(championship2games) |&gt; select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nchampionship2 &lt;- log_fit |&gt; predict(new_data = championship2games, type=\"prob\") |&gt;\n  bind_cols(championship2) |&gt; select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n#championship2"
  }
]